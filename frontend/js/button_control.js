document.addEventListener('DOMContentLoaded', () => {
    const moodButtons = document.querySelectorAll('.mood-btn');
    const createVideoBtn = document.getElementById('create-video-btn');
    const placeholderText = document.querySelector('.placeholder-text');
    const videoPreview = document.getElementById('video-preview');

    let selectedMood = null;
    let soundControlBtn = null;
    let videoLoadTimeout = null;
    let currentVideoHandlers = {};

    // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    createVideoBtn.style.opacity = 0;
    createVideoBtn.style.transform = 'translate(-50%, -50%) scale(0)';
    createVideoBtn.disabled = true;

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞/—Å–∫—Ä—ã—Ç–∏—è placeholder
    function showPlaceholder(show = true) {
        if (show) {
            placeholderText.style.display = 'block';
            setTimeout(() => {
                placeholderText.style.opacity = 1;
            }, 10);
            
        } else {
            placeholderText.style.display = 'none'
            setTimeout(() => {
            placeholderText.style.opacity = 0;
            
            }, 300); // –°–æ–≤–ø–∞–¥–∞–µ—Ç —Å duration transition
        }
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    function showMessage(text, isError = false) {
        // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        const existingMessages = document.querySelectorAll('.toast-message');
        existingMessages.forEach(msg => msg.remove());
        const msg = document.createElement('div');
        msg.textContent = text;
        msg.className = 'toast-message';
        if (isError) {
            msg.style.background = '#ff6b6b';
        }
        document.body.appendChild(msg);

        setTimeout(() => msg.classList.add('visible'), 10);
        setTimeout(() => {
            msg.classList.remove('visible');
            setTimeout(() => msg.remove(), 300);
        }, 1500);
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä—É—Å—Å–∫–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è
    function getMoodDisplayName(mood) {
        const names = {
            calm_weather: '–°–ø–æ–∫–æ–π–Ω–∞—è –ø–æ–≥–æ–¥–∞',
            waterfall: '–í–æ–¥–æ–ø–∞–¥',
            forest: '–õ–µ—Å',
            thunderstorm: '–ì—Ä–æ–∑–∞',
            night_sky: '–ù–æ—á–Ω–æ–µ –Ω–µ–±–æ'
        };
        return names[mood] || mood;
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –≤–∏–¥–µ–æ –∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    function cleanupVideo() {
        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–∏–¥–µ–æ
        videoPreview.pause();
        videoPreview.currentTime = 0;
        videoPreview.src = '';
        
        // –û—á–∏—â–∞–µ–º URL –æ–±—ä–µ–∫—Ç–∞
        if (videoPreview.src) {
            URL.revokeObjectURL(videoPreview.src);
        }
        
        // –£–¥–∞–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        Object.values(currentVideoHandlers).forEach(handler => {
            if (handler) {
                videoPreview.removeEventListener('loadeddata', handler.loaded);
                videoPreview.removeEventListener('error', handler.error);
            }
        });
        currentVideoHandlers = {};
        
        // –û—á–∏—â–∞–µ–º —Ç–∞–π–º–∞—É—Ç
        if (videoLoadTimeout) {
            clearTimeout(videoLoadTimeout);
            videoLoadTimeout = null;
        }
        
        // –£–¥–∞–ª—è–µ–º –∫–Ω–æ–ø–∫—É –∑–≤—É–∫–∞
        if (soundControlBtn) {
            soundControlBtn.remove();
            soundControlBtn = null;
        }
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–≤—É–∫–æ–º
    function createSoundControls() {
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –∫–Ω–æ–ø–∫—É –µ—Å–ª–∏ –µ—Å—Ç—å
        if (soundControlBtn) {
            soundControlBtn.remove();
        }

        soundControlBtn = document.createElement('button');
        soundControlBtn.innerHTML = 'üîä';
        soundControlBtn.className = 'sound-control-btn';
        soundControlBtn.style.cssText = `
            position: absolute;
            bottom: 20px;
            right: 20px;
            background: rgba(0,0,0,0.7);
            color: white;
            border: none;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            cursor: pointer;
            z-index: 1000;
            font-size: 1.2rem;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
        `;
        
        soundControlBtn.addEventListener('click', () => {
            if (videoPreview.muted) {
                videoPreview.muted = false;
                videoPreview.volume = 0.5;
                soundControlBtn.innerHTML = 'üîä';
                soundControlBtn.style.background = 'rgba(106, 140, 175, 0.9)';
            } else {
                videoPreview.muted = true;
                soundControlBtn.innerHTML = 'üîá';
                soundControlBtn.style.background = 'rgba(0,0,0,0.7)';
            }
        });
        
        document.querySelector('.preview-container').appendChild(soundControlBtn);
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –≤–∏–¥–µ–æ —Å–æ –∑–≤—É–∫–æ–º
    function playVideoWithSound() {
        videoPreview.muted = false;
        videoPreview.volume = 0.3;
        
        videoPreview.play().then(() => {
            console.log('–í–∏–¥–µ–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è —Å–æ –∑–≤—É–∫–æ–º');
            if (soundControlBtn) {
                soundControlBtn.innerHTML = 'üîä';
                soundControlBtn.style.background = 'rgba(106, 140, 175, 0.9)';
            }
        }).catch(error => {
            console.log('–ê–≤—Ç–æ–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∑–≤—É–∫–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ:', error);
            videoPreview.muted = true;
            videoPreview.play().then(() => {
                if (soundControlBtn) {
                    soundControlBtn.innerHTML = 'üîá';
                    soundControlBtn.style.background = 'rgba(0,0,0,0.7)';
                }
            }).catch(e => {
                console.log('–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –≤–∏–¥–µ–æ:', e);
            });
        });
    }

    moodButtons.forEach(button => {
        button.addEventListener('click', () => {
            // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –≤–∏–¥–µ–æ
            cleanupVideo();
            
            // –í—ã–¥–µ–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Å–º–∞–π–ª–∏–∫
            moodButtons.forEach(btn => btn.classList.remove('selected'));
            button.classList.add('selected');

            selectedMood = button.dataset.mood;

            // –°–∫—Ä—ã–≤–∞–µ–º –≤–∏–¥–µ–æ
            videoPreview.style.opacity = 0;
            videoPreview.style.display = 'none';

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
            showPlaceholder(true);
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
            createVideoBtn.disabled = false;
            createVideoBtn.style.transition = 'transform 0.5s ease, opacity 0.5s ease';
            createVideoBtn.style.opacity = 1;
            createVideoBtn.style.transform = 'translate(-50%, -50%) scale(1)';

            showMessage(`‚úÖ –í—ã–±—Ä–∞–Ω–æ: ${getMoodDisplayName(selectedMood)}`);
        });
    });

    createVideoBtn.addEventListener('click', async () => {
        if (!selectedMood) {
            showMessage('‚ö†Ô∏è –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ!', true);
            return;
        }

        createVideoBtn.textContent = '–°–æ–∑–¥–∞–Ω–∏–µ...';
        createVideoBtn.disabled = true;

        try {
            const response = await fetch('http://localhost:8000/api/generate-video', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ mood: selectedMood, duration: 10 })
            });

            if (!response.ok) {
                const errorData = await response.json().catch(() => ({ message: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' }));
                throw new Error(errorData.message || `HTTP error! status: ${response.status}`);
            }

            const videoBlob = await response.blob();
            const videoURL = URL.createObjectURL(videoBlob);

            // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –≤–∏–¥–µ–æ
            cleanupVideo();

            // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
            createVideoBtn.style.opacity = 0;
            createVideoBtn.style.transform = 'translate(-50%, -50%) scale(0)';

            // –°–∫—Ä—ã–≤–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
            showPlaceholder(false);

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–∏–¥–µ–æ
            videoPreview.src = videoURL;
            videoPreview.style.display = 'block';
            videoPreview.style.opacity = 0;
            videoPreview.style.transition = 'opacity 0.5s ease';

            // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–≤—É–∫–æ–º
            createSoundControls();

            // –§—É–Ω–∫—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
            const handleVideoLoad = () => {
                console.log('–í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ');
                if (videoLoadTimeout) {
                    clearTimeout(videoLoadTimeout);
                    videoLoadTimeout = null;
                }
                setTimeout(() => {
                    videoPreview.style.opacity = 1;
                    playVideoWithSound();
                }, 50);
            };

            const handleVideoError = () => {
                console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ');
                if (videoLoadTimeout) {
                    clearTimeout(videoLoadTimeout);
                    videoLoadTimeout = null;
                }
                showMessage('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ', true);
                videoPreview.style.display = 'none';
                showPlaceholder(true); // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–æ–∫–∞–∑–∞ placeholder
                if (soundControlBtn) {
                    soundControlBtn.remove();
                    soundControlBtn = null;
                }
            };

            // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –æ—á–∏—Å—Ç–∫–∏
            currentVideoHandlers = {
                loaded: handleVideoLoad,
                error: handleVideoError
            };

            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
            videoPreview.addEventListener('loadeddata', handleVideoLoad, { once: true });
            videoPreview.addEventListener('error', handleVideoError, { once: true });

            // –¢–∞–π–º–∞—É—Ç –Ω–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ –≤–∏–¥–µ–æ –Ω–µ –∑–∞–≥—Ä—É–∑–∏—Ç—Å—è
            videoLoadTimeout = setTimeout(() => {
                if (videoPreview.readyState < 2) {
                    console.log('–¢–∞–π–º–∞—É—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –≤–∏–¥–µ–æ');
                    handleVideoError();
                }
            }, 10000);

            showMessage('‚úÖ –í–∏–¥–µ–æ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ!');

        } catch (err) {
            console.error('–û—à–∏–±–∫–∞:', err);
            showMessage(`‚ùå –û—à–∏–±–∫–∞: ${err.message}`, true);
            
            // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
            videoPreview.style.display = 'none';
            showPlaceholder(true); // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–æ–∫–∞–∑–∞ placeholder
            cleanupVideo();
        } finally {
            createVideoBtn.textContent = '–°–æ–∑–¥–∞—Ç—å –≤–∏–¥–µ–æ';
            createVideoBtn.disabled = false;
        }
    });

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    window.addEventListener('load', async () => {
        try {
            const response = await fetch('http://localhost:8000/');
            if (response.ok) {
                console.log('‚úÖ –ë—ç–∫–µ–Ω–¥ –¥–æ—Å—Ç—É–ø–µ–Ω');
            }
        } catch (error) {
            console.warn('‚ö†Ô∏è –ë—ç–∫–µ–Ω–¥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
            showMessage('‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ.', true);
        }
    });
});
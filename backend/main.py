from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
from pydantic import BaseModel
import logging
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(message)s',
    datefmt='%Y-%m-%d %H:%M:%S'
)
logger = logging.getLogger(__name__)

app = FastAPI(title="CalmLoop API")

# CORS
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_methods=["*"],
    allow_headers=["*"],
)

class MoodRequest(BaseModel):
    mood: str
    duration: int

@app.post("/api/log-mood")
async def log_mood(request: MoodRequest):
    """–õ–æ–≥–∏—Ä—É–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ"""
    
    mood_display = {
        "calm": "–°–ø–æ–∫–æ–π–Ω–æ–µ",
        "happy": "–†–∞–¥–æ—Å—Ç–Ω–æ–µ", 
        "sad": "–ì—Ä—É—Å—Ç–Ω–æ–µ",
        "angry": "–ó–ª–æ–µ", 
        "dream": "–°–æ–Ω–ª–∏–≤–æ–µ"
    }
    
    mood_name = mood_display.get(request.mood, request.mood)
    
    logger.info(f"üé≠ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª: '{mood_name}'")
    logger.info(f"‚è± –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {request.duration} —Å–µ–∫.")
    logger.info(f"üìä –î–∞–Ω–Ω—ã–µ: {request.dict()}")
    logger.info("-" * 50)
    
    return {
        "status": "success", 
        "message": f"–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ '{mood_name}' –∑–∞–ø–∏—Å–∞–Ω–æ –≤ –ª–æ–≥!",
        "logged_data": request.dict(),
        "timestamp": datetime.now().isoformat()
    }

@app.get("/")
async def root():
    return {"message": "CalmLoop API —Ä–∞–±–æ—Ç–∞–µ—Ç!", "status": "ok"}

if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host="0.0.0.0", port=8000)
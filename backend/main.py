from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
from fastapi.responses import FileResponse
from schemas import MoodRequest
from services import log_service
from services.generate_video import generate_video_with_ai  

app = FastAPI(title="CalmLoop API Gateway")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ CORS
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],        
    allow_methods=["*"],        
    allow_headers=["*"],        
)

# –†–æ—É—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞
@app.get("/")
async def root():
    return {"message": "CalmLoop API Gateway —Ä–∞–±–æ—Ç–∞–µ—Ç!", "status": "ok"}

# –†–æ—É—Ç –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è
@app.post("/api/log-mood")
async def log_mood(request: MoodRequest):
    result = log_service.log_mood(request)
    return result

# –†–æ—É—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ —á–µ—Ä–µ–∑ AI

@app.post("/api/generate-video")
async def generate_video_endpoint(request: MoodRequest):
    try:
        print(f"üé¨ –ó–∞–ø—Ä–æ—Å –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –≤–∏–¥–µ–æ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è: {request.mood}")
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤–∏–¥–µ–æ —á–µ—Ä–µ–∑ AI
        video_path = generate_video_with_ai(request.mood)
        
        print(f"‚úÖ –í–∏–¥–µ–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {video_path}")
        return FileResponse(video_path)  # ‚úÖ –û—Ç–¥–∞–µ–º —Ñ–∞–π–ª –Ω–∞–ø—Ä—è–º—É—é
        
    except ValueError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {e}")
        return {"status": "error", "message": str(e)}
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ: {e}")
        return {"status": "error", "message": f"–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ: {str(e)}"}
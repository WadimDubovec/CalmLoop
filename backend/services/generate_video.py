from http import HTTPStatus
from dashscope import VideoSynthesis
import dashscope
from dotenv import load_dotenv
import os
import requests
from pathlib import Path
from datetime import datetime
import time
from services.mood_prompts import MOOD_PROMPTS

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

def initialize_dashscope():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è DashScope API"""
    API_KEY = os.getenv("DASHSCOPE_API_KEY")
    if not API_KEY:
        raise ValueError("‚ùå DASHSCOPE_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
    
    dashscope.base_http_api_url = 'https://dashscope-intl.aliyuncs.com/api/v1'
    dashscope.api_key = API_KEY
    print("‚úÖ DashScope API –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")

def generate_video_with_ai(mood: str) -> str:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –≤–∏–¥–µ–æ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É—è AI.
    –ü—Ä–∏ –æ—à–∏–±–∫–µ AI –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –≥–æ—Ç–æ–≤—ã–µ –≤–∏–¥–µ–æ –∫–∞–∫ fallback.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Ç—å –∫ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–º—É –≤–∏–¥–µ–æ.
    """
    print(f"üé¨ –ù–∞—á–∏–Ω–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –≤–∏–¥–µ–æ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è: {mood}")
    
    # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–º–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è
    if mood not in MOOD_PROMPTS:
        raise ValueError(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ: {mood}")
    
    prompt_config = MOOD_PROMPTS[mood]
    prompt = prompt_config["prompt"]
    negative_prompt = prompt_config["negative_prompt"]
    
    print(f"üìù –ü—Ä–æ–º–ø—Ç: {prompt[:100]}...")
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º API
        initialize_dashscope()
        
        # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        loop = prompt_config.get("loop", True)
        camera = prompt_config.get("camera", "static")
        
        # –£–ª—É—á—à–∞–µ–º –ø—Ä–æ–º–ø—Ç –¥–ª—è –∑–∞—Ü–∏–∫–ª–µ–Ω–Ω–æ–≥–æ –≤–∏–¥–µ–æ
        enhanced_prompt = f"{prompt}. Camera: {camera}, seamless loop: {loop}"
        
        print(f"‚è≥ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∑–∞—Ü–∏–∫–ª–µ–Ω–Ω–æ–µ –≤–∏–¥–µ–æ —á–µ—Ä–µ–∑ AI...")
        print(f"üìù –ö–∞–º–µ—Ä–∞: {camera}, –ó–∞—Ü–∏–∫–ª–∏–≤–∞–Ω–∏–µ: {loop}")
        
        # –ó–∞—Å–µ–∫–∞–µ–º –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        start_time = time.time()
        print(f"üïê –ù–∞—á–∞–ª–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {datetime.now().strftime('%H:%M:%S')}")
        
        # –í—ã–∑—ã–≤–∞–µ–º API –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ
        rsp = VideoSynthesis.call(
            model='wan2.5-t2v-preview',
            prompt=enhanced_prompt,
            negative_prompt=negative_prompt,
            size='832*480'
        )
        
        if rsp.status_code == HTTPStatus.OK:
            # –í—ã—á–∏—Å–ª—è–µ–º –≤—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
            generation_time = time.time() - start_time
            video_url = rsp.output.video_url
            print(f"‚úÖ –ó–∞—Ü–∏–∫–ª–µ–Ω–Ω–æ–µ –≤–∏–¥–µ–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –∑–∞ {generation_time:.1f} —Å–µ–∫—É–Ω–¥: {video_url}")
            
            # –°–∫–∞—á–∏–≤–∞–µ–º –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤–∏–¥–µ–æ —Å —É—á–µ—Ç–æ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
            saved_path = download_and_save_video(video_url, mood, loop, camera)
            return saved_path
        else:
            raise Exception(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {rsp.status_code}, {rsp.code}, {rsp.message}")
            
    except Exception as e:
        print(f"‚ö†Ô∏è AI –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: {e}")
        print("üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –≥–æ—Ç–æ–≤—ã–µ –≤–∏–¥–µ–æ...")
        return fallback_to_existing_video(mood)

def download_and_save_video(video_url: str, mood: str, loop: bool = True, camera: str = "static") -> str:
    """
    –°–∫–∞—á–∏–≤–∞–µ—Ç –≤–∏–¥–µ–æ –ø–æ URL –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –ø–∞–ø–∫—É.
    –£—á–∏—Ç—ã–≤–∞–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞—Ü–∏–∫–ª–∏–≤–∞–Ω–∏—è –∏ –∫–∞–º–µ—Ä—ã.
    """
    try:
        print(f"üì• –°–∫–∞—á–∏–≤–∞–µ–º –≤–∏–¥–µ–æ: {video_url}")
        
        # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        BASE_DIR = Path(__file__).resolve().parent
        MOOD_VIDEO_DIR = BASE_DIR / "files" / mood / "video"
        MOOD_VIDEO_DIR.mkdir(parents=True, exist_ok=True)
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –∑–∞—Ü–∏–∫–ª–∏–≤–∞–Ω–∏—è
        timestamp = datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
        loop_suffix = "_loop" if loop else "_no_loop"
        camera_suffix = f"_{camera}" if camera != "static" else ""
        filename = f"{mood}{loop_suffix}{camera_suffix}_{timestamp}.mp4"
        video_path = MOOD_VIDEO_DIR / filename
        
        # –°–∫–∞—á–∏–≤–∞–µ–º –≤–∏–¥–µ–æ
        response = requests.get(video_url, stream=True)
        response.raise_for_status()
        
        with open(video_path, 'wb') as f:
            for chunk in response.iter_content(chunk_size=8192):
                f.write(chunk)
        
        print(f"üíæ –ó–∞—Ü–∏–∫–ª–µ–Ω–Ω–æ–µ –≤–∏–¥–µ–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {video_path}")
        print(f"üìä –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: –∑–∞—Ü–∏–∫–ª–∏–≤–∞–Ω–∏–µ: {loop}, –∫–∞–º–µ—Ä–∞: {camera}")
        return str(video_path)
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ –≤–∏–¥–µ–æ: {e}")
        # –ü—Ä–∏ –æ—à–∏–±–∫–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ç–æ–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback
        print("üîÑ –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –≥–æ—Ç–æ–≤—ã–µ –≤–∏–¥–µ–æ...")
        return fallback_to_existing_video(mood)

def fallback_to_existing_video(mood: str) -> str:
    """
    Fallback —Ñ—É–Ω–∫—Ü–∏—è - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –≥–æ—Ç–æ–≤—ã–µ –≤–∏–¥–µ–æ –ø—Ä–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ AI.
    –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –æ—Ç–¥–∞–µ—Ç—Å—è –∑–∞—Ü–∏–∫–ª–µ–Ω–Ω—ã–º –≤–∏–¥–µ–æ.
    """
    print(f"üîÑ –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–æ—Ç–æ–≤—ã–µ –≤–∏–¥–µ–æ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è: {mood}")
    
    BASE_DIR = Path(__file__).resolve().parent
    VIDEO_DIR = BASE_DIR / "files" / mood / "video"
    
    if not VIDEO_DIR.exists():
        raise FileNotFoundError(f"‚ùå –ü–∞–ø–∫–∞ {VIDEO_DIR} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    
    VIDEO_EXTENSIONS = [".mp4", ".mov", ".avi"]
    videos = [f for f in VIDEO_DIR.iterdir() if f.suffix.lower() in VIDEO_EXTENSIONS]
    
    if not videos:
        raise FileNotFoundError(f"‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∏–¥–µ–æ –≤ {VIDEO_DIR}")
    
    # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: –∑–∞—Ü–∏–∫–ª–µ–Ω–Ω—ã–µ AI –≤–∏–¥–µ–æ > –æ–±—ã—á–Ω—ã–µ AI –≤–∏–¥–µ–æ > –≥–æ—Ç–æ–≤—ã–µ –≤–∏–¥–µ–æ
    loop_videos = [v for v in videos if "_loop" in v.name]
    ai_videos = [v for v in videos if any(mood_name in v.name for mood_name in MOOD_PROMPTS.keys())]
    
    if loop_videos:
        selected_video = max(loop_videos, key=lambda x: x.stat().st_mtime)
        print(f"üé¨ –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞—Ü–∏–∫–ª–µ–Ω–Ω–æ–µ AI –≤–∏–¥–µ–æ: {selected_video}")
    elif ai_videos:
        selected_video = max(ai_videos, key=lambda x: x.stat().st_mtime)
        print(f"ü§ñ –ò—Å–ø–æ–ª—å–∑—É–µ–º AI –≤–∏–¥–µ–æ: {selected_video}")
    else:
        # –í—ã–±–∏—Ä–∞–µ–º —Å–∞–º–æ–µ –Ω–æ–≤–æ–µ –≥–æ—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ
        videos.sort(key=lambda x: x.stat().st_mtime, reverse=True)
        selected_video = videos[0]
        print(f"üìÅ –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–æ—Ç–æ–≤–æ–µ –≤–∏–¥–µ–æ: {selected_video}")
    
    return str(selected_video)

def sample_sync_call_t2v(prompt: str):
    """–¢–µ—Å—Ç–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API"""
    initialize_dashscope()
    print('‚è≥ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ...')
    rsp = VideoSynthesis.call(model='wan2.5-t2v-preview',
                              prompt=prompt,
                              size='832*480')
    print(rsp)
    if rsp.status_code == HTTPStatus.OK:
        print(f"‚úÖ –í–∏–¥–µ–æ URL: {rsp.output.video_url}")
    else:
        print('‚ùå –û—à–∏–±–∫–∞: status_code: %s, code: %s, message: %s' %
              (rsp.status_code, rsp.code, rsp.message))

if __name__ == '__main__':
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è
    test_prompt = 'A fixed security camera angle of an empty parking lot at night. Rain falls steadily under a streetlight, creating looping ripples in a puddle. no camera movement.'
    sample_sync_call_t2v(prompt=test_prompt)